var Iterator=function(){},AsyncIterator=function(){};((a,b)=>{const c=a=>{let b=+a;if(b!=b||0===b)return 0;if(b==1/0||b===-1/0)return b;let c=j(k(b));return 0===c?0:c},d=a=>{if(null===a||a===b)throw p(q[1]);const c=a.next;if(!r(c))throw p(c+q[0]);return c},e=(a,c)=>{const d=a.return;throw d!==b&&u(d,a),c},f=async(a,c)=>{const d=a.return;throw d!==b&&(await u(d,a)),c},g=a=>`Method WrapForValidIteratorPrototype.${a} called on incompatible receiver `,h=(a,c)=>{var d={next(b){let e=this;if(d!==e)throw p(g("next")+e);return 0 in arguments?u(c,a,b):u(c,a)},return(c){let e=this;if(d!==e)throw p(g("return")+e);let f=a["return"];return{value:f===b?c:u(f,a),done:!0}},throw(c){let e=this;if(d!==e)throw p(g("throw")+e);let f=e["throw"];if(f===b)throw c;else return u(f,a,c)}};return o(d,w),d},i=(a,c)=>{var d={async next(b){let e=this;if(d!==e)throw p(g("next")+e);return 0 in arguments?await u(c,a,b):await u(c,a)},async return(c){let e=this;if(d!==e)throw p(g("return")+e);let f=a["return"];return{value:f===b?c:await u(f,a),done:!0}},async throw(c){let e=this;if(d!==e)throw p(g("throw")+e);let f=e["throw"];if(f===b)throw c;else return await u(f,a,c)}};return o(d,x),d},{floor:j,abs:k}=Math,{getPrototypeOf:l,defineProperty:m,getOwnPropertyNames:n,setPrototypeOf:o}=Object,p=TypeError,q=[" is not function"," is not iterable (cannot read property Symbol(Symbol.iterator))","Reduce of empty iterator with no initial value"],r=a=>"function"==typeof a,s=a=>{if(!r(a))throw p(a+"is not callable")},t=r.call,u=t.bind(t),v=Symbol.toStringTag,w=l(l(l(function*(){}()))),x=l(l(l(async function*(){}()))),y=(c,d,e)=>{d.constructor=c,c.prototype=d,v!=b&&m(d,v,{value:c.name,configurable:!0});for(const a of n(e.prototype))m(d,a,{value:e.prototype[a],writable:!0,configurable:!0});a[c.name]=c},z=Iterator.from=a=>{var c,e=Object(a),f=e[Symbol.iterator];if(f==b)c=e;else if(c=u(f,e),c instanceof Iterator)return c;return h(c,d(c))},A=AsyncIterator.from=a=>{var c,e,f=Object(a),g=null!==(c=f[Symbol.asyncIterator])&&void 0!==c?c:f[Symbol.iterator];if(g==b)e=f;else if(e=u(g,f),e instanceof AsyncIterator)return e;return i(e,d(e))};y(Iterator,w,class{*map(a){let b=this,c=d(b);s(a);let f;try{for(;;){const d=u(c,b,f);if(d.done)return;f=yield a(d.value)}}catch(a){e(b,a)}}*filter(a){let b=this,c=d(b);s(a);let f;try{for(;;){const d=u(c,b,f);if(d.done)return;const e=d.value,g=a(e);g&&(f=yield e)}}catch(a){e(b,a)}}*take(a){let b,f=this,g=d(f),h=c(a);try{for(;h--;){const a=u(g,f,b);if(a.done)return;b=yield a.value}}catch(a){e(f,a)}}*drop(a){let b,f=this,g=d(f),h=c(a);try{for(;h--;)if(u(g,f,b).done)return;for(;;){const a=u(g,f,b);if(a.done)return;b=yield a.value}}catch(a){e(f,a)}}*asIndexedPairs(){let a,b=this,c=d(b),f=0;try{for(;;){const d=u(c,b,a);if(d.done)return;a=yield[f++,d.value]}}catch(a){e(b,a)}}*flatMap(a){let b=this,c=d(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;yield*z(a(d.value))}}catch(a){e(b,a)}}reduce(a,b){let c=this,e=d(c),f=b;if(s(a),!(1 in arguments)){let a=u(e,c);if(a.done)throw p(q[2]);f=a.value}for(;;){const b=u(e,c);if(b.done)return f;f=a(f,b.value)}}toArray(){let a=this,b=d(a),c=[],f=0;try{for(;;){const d=u(b,a);if(d.done)return c;c[f++]=d.value}}catch(b){e(a,b)}}forEach(a){let b=this,c=d(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;a(d.value)}}catch(a){e(b,a)}}some(a){let b=this,c=d(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return!1;if(a(d.value))return!0}}catch(a){e(b,a)}}every(a){let b=this,c=d(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return!0;if(!a(d.value))return!1}}catch(a){e(b,a)}}find(a){let b=this,c=d(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;const e=d.value;if(a(e))return e}}catch(a){e(b,a)}}}),y(AsyncIterator,x,class{async*map(a){let b=this,c=d(b);s(a);let e;try{for(;;){const d=await u(c,b,e);if(d.done)return;e=yield a(d.value)}}catch(a){await f(b,a)}}async*filter(a){let b=this,c=d(b);s(a);let e;try{for(;;){const d=await u(c,b,e);if(d.done)return;const f=d.value,g=await a(f);g&&(e=yield f)}}catch(a){await f(b,a)}}async*take(a){let b,e=this,g=d(e),h=c(a);try{for(;h--;){const a=await u(g,e,b);if(a.done)return;b=yield a.value}}catch(a){await f(e,a)}}async*drop(a){let b,e=this,g=d(e),h=c(a);try{for(;h--;)if((await u(g,e,b)).done)return;for(;;){const a=await u(g,e,b);if(a.done)return;b=yield a.value}}catch(a){await f(e,a)}}async*asIndexedPairs(){let a,b=this,c=d(b),e=0;try{for(;;){const d=await u(c,b,a);if(d.done)return;a=yield[e++,d.value]}}catch(a){await f(b,a)}}async*flatMap(a){let b=this,c=d(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;yield*A(await a(d.value))}}catch(a){await f(b,a)}}async reduce(a,b){let c=this,e=d(c),g=b;s(a);try{if(!(1 in arguments)){let a=await u(e,c);if(a.done)throw p(q[2]);g=a.value}for(;;){const b=await u(e,c);if(b.done)return g;g=await a(g,b.value)}}catch(a){await f(c,a)}}async toArray(){let a=this,b=d(a),c=[],e=0;try{for(;;){const d=await u(b,a);if(d.done)return c;c[e++]=d.value}}catch(b){await f(a,b)}}async forEach(a){let b=this,c=d(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;await a(d.value)}}catch(a){await f(b,a)}}async some(a){let b=this,c=d(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return!1;if(a(d.value))return!0}}catch(a){await f(b,a)}}async every(a){let b=this,c=d(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return!0;if(!a(d.value))return!1}}catch(a){await f(b,a)}}async find(a){let b=this,c=d(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;const e=d.value;if(a(e))return e}}catch(a){await f(b,a)}}})})((a=>{var b,c=a.prototype;return a.defineProperty(c,"__magic__",{get(){return this},configurable:!0}),b=__magic__,delete c.__magic__,b})(Object));