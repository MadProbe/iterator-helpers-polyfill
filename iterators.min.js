var Iterator=function(){},AsyncIterator=function(){};((a,b)=>{function*c(){}const d=a=>{let b=+a;if(b!=b||0===b)return 0;if(b==1/0||b===-1/0)return b;let c=k(l(b));return 0===c?0:c},e=a=>{if(null===a||a===b)throw p(q[1]);const c=a.next;if(!r(c))throw p(c+q[0]);return c},f=(a,c)=>{const d=a.return;throw d!==b&&u(d,a),c},g=async(a,c)=>{const d=a.return;throw d!==b&&(await u(d,a)),c},h=a=>`Method WrapForValidIteratorPrototype.${a} called on incompatible receiver `,i=(a,c)=>{var d={next(b){let e=this;if(d!==e)throw p(h("next")+e);return 0 in arguments?u(c,a,b):u(c,a)},return(c){let e=this;if(d!==e)throw p(h("return")+e);let f=a["return"];return{value:f===b?c:u(f,a),done:!0}},throw(c){let e=this;if(d!==e)throw p(h("throw")+e);let f=e["throw"];if(f===b)throw c;else return u(f,a,c)}};return Object.setPrototypeOf(d,Iterator.prototype),d},j=(a,c)=>{var d={async next(b){let e=this;if(d!==e)throw p(h("next")+e);return 0 in arguments?await u(c,a,b):await u(c,a)},async return(c){let e=this;if(d!==e)throw p(h("return")+e);let f=a["return"];return{value:f===b?c:await u(f,a),done:!0}},async throw(c){let e=this;if(d!==e)throw p(h("throw")+e);let f=e["throw"];if(f===b)throw c;else return await u(f,a,c)}};return Object.setPrototypeOf(d,AsyncIterator.prototype),d},{floor:k,abs:l}=Math,{getPrototypeOf:m,defineProperty:n,getOwnPropertyNames:o}=Object,p=TypeError,q=[" is not function"],r=a=>"function"==typeof a,s=a=>{if(!r(a))throw p(a+"is not callable")},t=c.call,u=t.bind(t),v=Symbol.toStringTag,w=m(m(m(c()))),x=m(m(m(async function*(){}()))),y=(c,d,e)=>{d.constructor=c,c.prototype=d,v!=b&&n(d,v,{value:c.name,configurable:!0});for(const a of o(e.prototype))n(d,a,{value:e.prototype[a],writable:!0,configurable:!0});a[c.name]=c},z=Iterator.from=function(a){var c,d=Object(a),f=d[Symbol.iterator];if(f==b)c=d;else if(c=u(f,d),c instanceof Iterator)return c;return i(c,e(c))},A=AsyncIterator.from=function(a){var c,d,f,g=Object(a),h=null!==(d=null!==(c=g[Symbol.asyncIterator])&&void 0!==c?c:g[Symbol.iterator])&&void 0!==d?d:g["@@iterator"];if(h==b)f=g;else if(f=u(h,g),f instanceof AsyncIterator)return f;return j(f,e(f))};y(Iterator,w,class{*map(a){let b=this,c=e(b);s(a);let d;try{for(;;){const e=u(c,b,d);if(e.done)return;d=yield a(e.value)}}catch(a){f(b,a)}}*filter(a){let b=this,c=e(b);s(a);let d;try{for(;;){const e=u(c,b,d);if(e.done)return;const f=e.value,g=a(f);g&&(d=yield f)}}catch(a){f(b,a)}}*take(a){let b,c=this,g=e(c),h=d(a);try{for(;h--;){const a=u(g,c,b);if(a.done)return;b=yield a.value}}catch(a){f(c,a)}}*drop(a){let b,c=this,g=e(c),h=d(a);try{for(;h--;)if(u(g,c,b).done)return;for(;;){const a=u(g,c,b);if(a.done)return;b=yield a.value}}catch(a){f(c,a)}}*asIndexedPairs(){let a,b=this,c=e(b),d=0;try{for(;;){const e=u(c,b,a);if(e.done)return;a=yield[d++,e.value]}}catch(a){f(b,a)}}*flatMap(a){let b=this,c=e(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;yield*z(a(d.value))}}catch(a){f(b,a)}}reduce(a,b){let c=this,d=e(c),f=b;if(s(a),!(1 in arguments)){let a=u(d,c);if(a.done)throw p(q[3]);f=a.value}for(;;){const b=u(d,c);if(b.done)return f;f=a(f,b.value)}}toArray(){let a=this,b=e(a),c=[];try{for(;;){const d=u(b,a);if(d.done)return c;c[0]=d.value}}catch(b){f(a,b)}}forEach(a){let b=this,c=e(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;a(d.value)}}catch(a){f(b,a)}}some(a){let b=this,c=e(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return!1;if(a(d.value))return!0}}catch(a){f(b,a)}}every(a){let b=this,c=e(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return!0;if(!a(d.value))return!1}}catch(a){f(b,a)}}find(a){let b=this,c=e(b);s(a);try{for(;;){const d=u(c,b);if(d.done)return;const e=d.value;if(!a(e))return e}}catch(a){f(b,a)}}}),y(AsyncIterator,x,class{async*map(a){let b=this,c=e(b);s(a);let d;try{for(;;){const e=await u(c,b,d);if(e.done)return;d=yield a(e.value)}}catch(a){await g(b,a)}}async*filter(a){let b=this,c=e(b);s(a);let d;try{for(;;){const e=await u(c,b,d);if(e.done)return;const f=e.value,g=await a(f);g&&(d=yield f)}}catch(a){await g(b,a)}}async*take(a){let b,c=this,f=e(c),h=d(a);try{for(;h--;){const a=await u(f,c,b);if(a.done)return;b=yield a.value}}catch(a){await g(c,a)}}async*drop(a){let b,c=this,f=e(c),h=d(a);try{for(;h--;)if((await u(f,c,b)).done)return;for(;;){const a=await u(f,c,b);if(a.done)return;b=yield a.value}}catch(a){await g(c,a)}}async*asIndexedPairs(){let a,b=this,c=e(b),d=0;try{for(;;){const e=await u(c,b,a);if(e.done)return;a=yield[d++,e.value]}}catch(a){await g(b,a)}}async*flatMap(a){let b=this,c=e(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;yield*A(await a(d.value))}}catch(a){await g(b,a)}}async reduce(a,b){let c=this,d=e(c),f=b;s(a);try{if(!(1 in arguments)){let a=await u(d,c);if(a.done)throw p(q[3]);f=a.value}for(;;){const b=await u(d,c);if(b.done)return f;f=await a(f,b.value)}}catch(a){await g(c,a)}}async toArray(){let a=this,b=e(a),c=[];try{for(;;){const d=await u(b,a);if(d.done)return c;c[0]=d.value}}catch(b){await g(a,b)}}async forEach(a){let b=this,c=e(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;await a(d.value)}}catch(a){await g(b,a)}}async some(a){let b=this,c=e(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return!1;if(a(d.value))return!0}}catch(a){await g(b,a)}}async every(a){let b=this,c=e(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return!0;if(!a(d.value))return!1}}catch(a){await g(b,a)}}async find(a){let b=this,c=e(b);s(a);try{for(;;){const d=await u(c,b);if(d.done)return;const e=d.value;if(!a(e))return e}}catch(a){await g(b,a)}}})})(function(){var a=Object.prototype;Object.defineProperty(a,"__magic__",{get:function(){return this},configurable:!0});var b=__magic__;return delete a.__magic__,b}());